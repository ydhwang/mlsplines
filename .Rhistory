library(splines)
ns(1:10, df = 1)
x <- ns(1:10, df = 1)
x
str(x)
x %*% x
x %*% t(x)
t(x) %*% x
x <- ns(1:109, df = 1)
x <- ns(1:100, df = 1)
t(x) %*% x
x %*% t(x)
x <- ns(1:100, df = 1)
x <- ns(1:5, df = 1)
x
ts.plot(x)
?ns
x <- ns(1:5, knots = 1:5)
library(mlsplines)
?make_K
library(mlsplines)
library(mlsplines)
library(mlsplines)
library(mlsplines)
library(mlsplines)
update.packages("roxygen2")
response_list <- generate_response_smooth(J = J, mod = mod, e_sigma = error_sigma, N_s = N_s)
library(mlsplines)
x <- runif(1600)
R <- matrix(1600* 1600, nrow = 1600)
object.size(R)
R <- matrix(runif(1600* 1600), nrow = 1600)
object.size(R)
x <- runif(1600) %>% as.vector()
x <- runif(1600) %>% as.vector
library(tidyverse)
x <- runif(1600) %>% as.vector
dim(x)
x
A <- x %*% R
dim(A)
A <- x %*% R %*% t(x)
A <- sum((x %*% R)*x )
x <- runif(1600) %>% as.vector
R <- matrix(runif(1600* 1600), nrow = 1600)
sum((x %*% R)*x)
x <- runif(1600) %>% as.vector
R <- matrix(runif(1600* 1600), nrow = 1600)
system.time(sum((x %*% R)*x))
R[1,]
x <- runif(1600) %>% as.vector
R <- matrix(runif(1600* 1600), nrow = 1600)
system.time(sum((x %*% R)*x))
x <- runif(1600)
R <- matrix(runif(1600* 1600), nrow = 1600)
system.time(sum((x %*% R)*x))
sum((x %*% R)*x)
dim(R)
